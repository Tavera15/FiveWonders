@model FiveWonders.core.Models.HomePage

@{
    string logo = !String.IsNullOrWhiteSpace(Model.mHomePageLogoUrl)
        ? Url.Content("~/Content/Home/" + Model.mHomePageLogoUrl)
        : "";

    string homeBg = !String.IsNullOrWhiteSpace(Model.mWelcomeImgUrl)
        ? Url.Content("~/Content/Home/" + Model.mWelcomeImgUrl)
        : "";

    string catBg = !String.IsNullOrWhiteSpace(Model.mDefaultProductListImgUrl)
        ? Url.Content("~/Content/Home/" + Model.mDefaultProductListImgUrl)
        : "";
}

<div>


    @using (Html.BeginForm("Index", "HomeManager", FormMethod.Post, new { encType = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <div class="jumbotron jumbo-img" id="jumbo-bg-prev" style="background-image: url(@homeBg);">
                <img src="@logo"
                     alt="logo"
                     class="jumbo-logo jumbo-item"
                     id="jumbo-logo-prev" />

                <div id="home-prev-text">
                    @Html.Raw(Model.mHomePageGreeting)
                </div>

                <p style="text-align:left;" class="jumbo-item jumbo-btn"><a href="" class="btn btn-primary btn-lg">View Products &raquo;</a></p>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.mHomePageLogoUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-offset-2 col-md-10">
                    <input oninput="setHomeBannerLogo()" type="file" id="homeLogo" name="homeLogo" class="form-control" accept="image/png,image/jpg,image/jpeg" />
                    @Html.ValidationMessageFor(model => model.mHomePageLogoUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mWelcomeImgUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-offset-2 col-md-10">
                    <input oninput="setHomeBannerBg()" type="file" id="homeImg" name="homeImg" class="form-control" accept="image/png,image/jpg,image/jpeg" />
                    @Html.ValidationMessageFor(model => model.mWelcomeImgUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mHomePageGreeting, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.mHomePageGreeting, new { @Id = "homeTextPrev" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mWelcomeBtnUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.mWelcomeBtnUrl, new SelectList(ViewBag.links, "key", "value", Model.mWelcomeBtnUrl), new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mPromo1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.mPromo1, new SelectList(ViewBag.promoLinks, "key", "value", Model.mPromo1), new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mPromo2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.mPromo2, new SelectList(ViewBag.promoLinks, "key", "value", Model.mPromo2), new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <hr />

            <div id="products-page">
                <div class="pp-title-container"
                     style="background-image: url(@Url.Content(catBg));"
                     id="bannerImg-input">
                    <div id="bannerImg-cover-input" style="background-color: rgba(0,0,0, @Model.defaultBannerImgShader);" class="pp-title-dark-layer">
                        <h2 style="color: @Model.mdefaultBannerTextColor" id="category-title-input" class="pp-title-text">@Model.mDefaultProductsBannerText</h2>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mDefaultProductListImgUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-offset-2 col-md-10">
                    <input type="file" oninput="setCategoryProps()" id="default_bannerImg" name="default_bannerImg" class="form-control" accept="image/png,image/jpg,image/jpeg" />
                    @Html.ValidationMessageFor(model => model.mDefaultProductListImgUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mDefaultProductsBannerText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-offset-2 col-md-10">
                    @Html.EditorFor(model => model.mDefaultProductsBannerText, new { htmlAttributes = new { @class = "form-control", @id = "help", @oninput = "setCategoryProps()" } })
                    @Html.ValidationMessageFor(model => model.mDefaultProductsBannerText, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mdefaultBannerTextColor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-offset-2 col-md-10">
                    @Html.EditorFor(model => model.mdefaultBannerTextColor, new { htmlAttributes = new { @class = "form-control", @type = "color", @id = "color", @oninput = "setCategoryProps()" } })
                    @Html.ValidationMessageFor(model => model.mdefaultBannerTextColor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.defaultBannerImgShader, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-offset-2 col-md-10">
                    @Html.EditorFor(model => model.defaultBannerImgShader, new { htmlAttributes = new { @class = "form-control", @oninput = "setCategoryProps()", @id = "opacity", @type = "range", @min = "0", @max = "1", @step = "0.01", @style = "padding: 0;" } })
                    @Html.ValidationMessageFor(model => model.defaultBannerImgShader, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/tinymce/tinymce.js"></script>
    <script src="~/Scripts/TinyMce_Client/HomePagePreview.js"></script>

    <script>
        function setHomeBannerBg() {
            var homeImg = document.getElementById('homeImg').files[0];
            var homeDest = document.getElementById('jumbo-bg-prev');

            if (homeImg) {
                var reader = new FileReader();
                reader.readAsDataURL(homeImg);

                reader.onloadend = function () {
                    homeDest.style.backgroundImage = 'url("' + reader.result + '")';
                }
            }
        }

        function setHomeBannerLogo() {
            var logoImg = document.getElementById('homeLogo').files[0];
            var logoDest = document.getElementById('jumbo-logo-prev');

            if (logoImg) {
                var reader = new FileReader();
                reader.readAsDataURL(logoImg);

                reader.onloadend = function () {
                    logoDest.src = reader.result;
                }
            }
        }

        function setCategoryProps() {
            var color = document.getElementById('color').value;
            var opacity = document.getElementById('opacity').value;
            var categoryName = document.getElementById('help').value;
            var img = document.getElementById('default_bannerImg').files[0];

            if (img) {
                var reader = new FileReader();
                reader.readAsDataURL(img);

                reader.onloadend = function () {
                    document.getElementById('bannerImg-input').style.backgroundImage = 'url("' + reader.result + '")';
                }
            }

            document.getElementById('bannerImg-cover-input').style.backgroundColor = "rgba(0,0,0," + opacity + ")";
            document.getElementById('category-title-input').innerText = categoryName;
            document.getElementById('category-title-input').style.color = color;
        }

    </script>

}

@section Pagecss
{
    <link href="~/Content/5WondersCss/HomePageCss.css"
          rel="stylesheet" type="text/css" />

    <link href="~/Content/5WondersCss/ProductList.css"
          rel="stylesheet" type="text/css" />
}