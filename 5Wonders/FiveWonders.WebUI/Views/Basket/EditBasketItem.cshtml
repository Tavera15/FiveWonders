@model FiveWonders.core.ViewModels.BasketItemViewModel

<h4>@Model.product.mName</h4>
<hr />

<div class="form-group" style="text-align: center;">
    @Html.LabelFor(model => model.basketItem.mQuantity)

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="margin-bottom: 1rem; display: flex; flex-direction: row; justify-content: center;">
        <input onclick="handleQuantity(-1)" type="image" width="32" height="32" src="~/Content/Icons/MinusRed32.png" />
        <h3 id="quantityDisplay" style="margin: auto 20px;">@Model.basketItem.mQuantity</h3>
        <input onclick="handleQuantity(1)" type="image" width="32" height="32" src="~/Content/Icons/PlusGreen32.png" />
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <input name="basketItem.mQuantity" id="quantityInput" type="number" min="1" step="1" value="@Model.basketItem.mQuantity" style="display:none; " />


        @if (Model.sizeChart != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.basketItem.mSize, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.basketItem.mSize, new SelectList(Model.sizeChart.mSizesToDisplay.Split(','), Model.basketItem.mSize), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.basketItem.mSize, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (Model.product.isTextCustomizable)
        {
            <div class="form-group">
                <label class="control-label col-md-2">@Model.product.mCustomText</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.basketItem.mCustomText, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.basketItem.mCustomText, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (Model.product.isNumberCustomizable)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.basketItem.mCustomNum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.basketItem.mCustomNum, new { htmlAttributes = new { @type = "number", @min = "0", @step = "1", @value = "0", placeholder = "0-99" } })
                    @Html.ValidationMessageFor(model => model.basketItem.mCustomNum, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (!String.IsNullOrWhiteSpace(Model.product.mCustomLists))
        {
            int i = 0;

            foreach (var key in Model.listOptions.Keys)
            {
                <div class="form-group">
                    <label class="control-label col-md-2">@Model.customListNames[i++]</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.selectedCustomListOptions[key], new SelectList(Model.listOptions[key], Model.selectedCustomListOptions[key]), new { htmlAttributes = new { } })
                        @Html.ValidationMessageFor(model => model.basketItem.mCustomListOptions, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }

        @if (Model.product.isDateCustomizable)
        {
            <div class="form-group">
                <label class="control-label col-md-2">Custom Date:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.basketItem.customDate, "", new { htmlAttributes = new { @type = "date" } })
                    @Html.ValidationMessageFor(model => model.basketItem.customDate, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (Model.product.isTimeCustomizable)
        {
            <div class="form-group">
                <label class="control-label col-md-2">Custom Time:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.basketItem.customTime, "", new { htmlAttributes = new { @placeholder = "ie. 04:00" } })
                    @Html.ValidationMessageFor(model => model.basketItem.customTime, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (ViewBag.errMessages != null && ViewBag.errMessages.Length > 0)
        {
            <div class="col-lg-12, col-md-12 col-sm-12 col-xs-12" style="margin: 2rem 0; padding: 2rem; border: solid red 1px;">
                @foreach (string errMsg in ViewBag.errMessages)
                {
                    <p class="text-danger">@errMsg</p>
                }
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <!-- Include jQuery -->
    <script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>

    <script>
        function handleQuantity(amountToAdd) {
            let amount = document.getElementById("quantityInput").value;

            document.getElementById("quantityInput").value = +amount + +amountToAdd >= 1 ? +amount + +amountToAdd : 1;

            document.getElementById("quantityDisplay").innerText = document.getElementById("quantityInput").value
        }
    </script>

    <!-- Include Date Range Picker -->
    <!--<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/js/bootstrap-datepicker.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/css/bootstrap-datepicker3.css" />


    <script>
        $(document).ready(function () {
            var date_input = $('input[name="basketItem.customDate"]');
            var options = {
                format: 'mm/dd/yyyy',
                container: 'body',
                todayHighlight: true,
                autoclose: true,
                todayBtn: true,
            };
            date_input.datepicker(options);
        })
    </script>-->
}